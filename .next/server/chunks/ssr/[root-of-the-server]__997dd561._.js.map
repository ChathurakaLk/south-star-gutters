{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///D:/chathuraka%202025/south-star-gutters/app/components/ui/resizable-navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MobileNav = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNav() from the server but MobileNav is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"MobileNav\",\n);\nexport const MobileNavHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavHeader() from the server but MobileNavHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"MobileNavHeader\",\n);\nexport const MobileNavMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavMenu() from the server but MobileNavMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"MobileNavMenu\",\n);\nexport const MobileNavToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavToggle() from the server but MobileNavToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"MobileNavToggle\",\n);\nexport const NavBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBody() from the server but NavBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"NavBody\",\n);\nexport const NavItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItems() from the server but NavItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"NavItems\",\n);\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"Navbar\",\n);\nexport const NavbarButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarButton() from the server but NavbarButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"NavbarButton\",\n);\nexport const NavbarLogo = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarLogo() from the server but NavbarLogo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx <module evaluation>\",\n    \"NavbarLogo\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wEACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wEACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wEACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wEACA;AAEG,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,wEACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wEACA","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///D:/chathuraka%202025/south-star-gutters/app/components/ui/resizable-navbar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MobileNav = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNav() from the server but MobileNav is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"MobileNav\",\n);\nexport const MobileNavHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavHeader() from the server but MobileNavHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"MobileNavHeader\",\n);\nexport const MobileNavMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavMenu() from the server but MobileNavMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"MobileNavMenu\",\n);\nexport const MobileNavToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileNavToggle() from the server but MobileNavToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"MobileNavToggle\",\n);\nexport const NavBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavBody() from the server but NavBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"NavBody\",\n);\nexport const NavItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavItems() from the server but NavItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"NavItems\",\n);\nexport const Navbar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"Navbar\",\n);\nexport const NavbarButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarButton() from the server but NavbarButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"NavbarButton\",\n);\nexport const NavbarLogo = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavbarLogo() from the server but NavbarLogo is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/components/ui/resizable-navbar.tsx\",\n    \"NavbarLogo\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oDACA;AAEG,MAAM,UAAU,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oDACA;AAEG,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,oDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,oDACA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///D:/chathuraka%202025/south-star-gutters/app/components/Navbar.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n// import Link from 'next/link'\r\n// import Image from 'next/image'\r\n\r\n// const Navbar = () => {\r\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n//   const navItems = [\r\n//     { label: 'About', href: '#about' },\r\n//     { label: 'Projects', href: '#projects' },\r\n//     { label: 'Contact', href: '#contact' },\r\n//   ]\r\n\r\n//   return (\r\n//     <div className=\"relative\">\r\n//       <nav className=\"flex justify-between items-center py-6 px-4\">\r\n//         <Image\r\n//           src=\"/south-logo.png\"\r\n//           alt=\"Logo\"\r\n//           width={40}\r\n//           height={40}\r\n//           className=\"w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 lg:w-16 lg:h-16 object-contain\"\r\n//         />\r\n//         <div className=\"hidden sm:flex items-center gap-8\">\r\n//           {navItems.map((item, i) => (\r\n//             <Link key={i} href={item.href} className=\"hover:underline\">\r\n//               {item.label}\r\n//             </Link>\r\n//           ))}\r\n//         </div>\r\n\r\n//         <button\r\n//           className=\"sm:hidden\"\r\n//           onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n//         >\r\n//           {isMenuOpen ? (\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n//             </svg>\r\n//           ) : (\r\n//             <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6\">\r\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\" />\r\n//             </svg>\r\n//           )}\r\n//         </button>\r\n//       </nav>\r\n\r\n//       {isMenuOpen && (\r\n//         <div className=\"sm:hidden fixed top-[4rem] left-0 right-0 bg-white p-4 shadow-lg border-t border-gray-200 \">\r\n//           {navItems.map((item, i) => (\r\n//             <Link\r\n//               key={i}\r\n//               href={item.href}\r\n//               className=\"block py-2 text-black font-medium hover:bg-gray-100 rounded px-2\"\r\n//               onClick={() => setIsMenuOpen(false)}\r\n//             >\r\n//               {item.label}\r\n//             </Link>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Navbar\r\n\r\n\"use client\";\r\nimport {\r\n  Navbar,\r\n  NavBody,\r\n  NavItems,\r\n  MobileNav,\r\n  NavbarLogo,\r\n  NavbarButton,\r\n  MobileNavHeader,\r\n  MobileNavToggle,\r\n  MobileNavMenu,}\r\nfrom \"./ui/resizable-navbar\";\r\n\r\nconst NavbarCom = () => {\r\n  const navItems = [\r\n    {\r\n      name: \"Features\",\r\n      link: \"#features\",\r\n    },\r\n    {\r\n      name: \"Pricing\",\r\n      link: \"#pricing\",\r\n    },\r\n    {\r\n      name: \"Contact\",\r\n      link: \"#contact\",\r\n    },\r\n  ];\r\n \r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n \r\n  return (\r\n    <Navbar>\r\n        {/* Desktop Navigation */}\r\n        <NavBody>\r\n          <NavbarLogo />\r\n          <NavItems items={navItems} />\r\n          <div className=\"flex items-center gap-4\">\r\n            <NavbarButton variant=\"secondary\">Login</NavbarButton>\r\n            <NavbarButton variant=\"primary\">Book a call</NavbarButton>\r\n          </div>\r\n        </NavBody>\r\n \r\n        {/* Mobile Navigation */}\r\n        <MobileNav>\r\n          <MobileNavHeader>\r\n            <NavbarLogo />\r\n            <MobileNavToggle\r\n              isOpen={isMobileMenuOpen}\r\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            />\r\n          </MobileNavHeader>\r\n \r\n          <MobileNavMenu\r\n            isOpen={isMobileMenuOpen}\r\n            onClose={() => setIsMobileMenuOpen(false)}\r\n          >\r\n            {navItems.map((item, idx) => (\r\n              <a\r\n                key={`mobile-link-${idx}`}\r\n                href={item.link}\r\n                onClick={() => setIsMobileMenuOpen(false)}\r\n                className=\"relative text-neutral-600 dark:text-neutral-300\"\r\n              >\r\n                <span className=\"block\">{item.name}</span>\r\n              </a>\r\n            ))}\r\n            <div className=\"flex w-full flex-col gap-4\">\r\n              <NavbarButton\r\n                onClick={() => setIsMobileMenuOpen(false)}\r\n                variant=\"primary\"\r\n                className=\"w-full\"\r\n              >\r\n                Login\r\n              </NavbarButton>\r\n              <NavbarButton\r\n                onClick={() => setIsMobileMenuOpen(false)}\r\n                variant=\"primary\"\r\n                className=\"w-full\"\r\n              >\r\n                Book a call\r\n              </NavbarButton>\r\n            </div>\r\n          </MobileNavMenu>\r\n        </MobileNav>\r\n      </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavbarCom\r\n"],"names":[],"mappings":";;;;AAAA;AAmEA;;;AAlEA,+BAA+B;AAC/B,iCAAiC;AAEjC,yBAAyB;AACzB,yDAAyD;AACzD,uBAAuB;AACvB,0CAA0C;AAC1C,gDAAgD;AAChD,8CAA8C;AAC9C,MAAM;AAEN,aAAa;AACb,iCAAiC;AACjC,sEAAsE;AACtE,iBAAiB;AACjB,kCAAkC;AAClC,uBAAuB;AACvB,uBAAuB;AACvB,wBAAwB;AACxB,+FAA+F;AAC/F,aAAa;AACb,8DAA8D;AAC9D,yCAAyC;AACzC,0EAA0E;AAC1E,6BAA6B;AAC7B,sBAAsB;AACtB,gBAAgB;AAChB,iBAAiB;AAEjB,kBAAkB;AAClB,kCAAkC;AAClC,uDAAuD;AACvD,YAAY;AACZ,4BAA4B;AAC5B,mJAAmJ;AACnJ,+FAA+F;AAC/F,qBAAqB;AACrB,kBAAkB;AAClB,mJAAmJ;AACnJ,uHAAuH;AACvH,qBAAqB;AACrB,eAAe;AACf,oBAAoB;AACpB,eAAe;AAEf,yBAAyB;AACzB,uHAAuH;AACvH,yCAAyC;AACzC,oBAAoB;AACpB,wBAAwB;AACxB,iCAAiC;AACjC,6FAA6F;AAC7F,qDAAqD;AACrD,gBAAgB;AAChB,6BAA6B;AAC7B,sBAAsB;AACtB,gBAAgB;AAChB,iBAAiB;AACjB,WAAW;AACX,aAAa;AACb,MAAM;AACN,IAAI;AAEJ,wBAAwB;AAExB;;AAaA,MAAM,YAAY;IAChB,MAAM,WAAW;QACf;YACE,MAAM;YACN,MAAM;QACR;QACA;YACE,MAAM;YACN,MAAM;QACR;QACA;YACE,MAAM;YACN,MAAM;QACR;KACD;IAED,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,qBACE,8OAAC,+IAAA,CAAA,SAAM;;0BAEH,8OAAC,+IAAA,CAAA,UAAO;;kCACN,8OAAC,+IAAA,CAAA,aAAU;;;;;kCACX,8OAAC,+IAAA,CAAA,WAAQ;wBAAC,OAAO;;;;;;kCACjB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+IAAA,CAAA,eAAY;gCAAC,SAAQ;0CAAY;;;;;;0CAClC,8OAAC,+IAAA,CAAA,eAAY;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;0BAKpC,8OAAC,+IAAA,CAAA,YAAS;;kCACR,8OAAC,+IAAA,CAAA,kBAAe;;0CACd,8OAAC,+IAAA,CAAA,aAAU;;;;;0CACX,8OAAC,+IAAA,CAAA,kBAAe;gCACd,QAAQ;gCACR,SAAS,IAAM,oBAAoB,CAAC;;;;;;;;;;;;kCAIxC,8OAAC,+IAAA,CAAA,gBAAa;wBACZ,QAAQ;wBACR,SAAS,IAAM,oBAAoB;;4BAElC,SAAS,GAAG,CAAC,CAAC,MAAM,oBACnB,8OAAC;oCAEC,MAAM,KAAK,IAAI;oCACf,SAAS,IAAM,oBAAoB;oCACnC,WAAU;8CAEV,cAAA,8OAAC;wCAAK,WAAU;kDAAS,KAAK,IAAI;;;;;;mCAL7B,CAAC,YAAY,EAAE,KAAK;;;;;0CAQ7B,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,+IAAA,CAAA,eAAY;wCACX,SAAS,IAAM,oBAAoB;wCACnC,SAAQ;wCACR,WAAU;kDACX;;;;;;kDAGD,8OAAC,+IAAA,CAAA,eAAY;wCACX,SAAS,IAAM,oBAAoB;wCACnC,SAAQ;wCACR,WAAU;kDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQf;uCAEe","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///D:/chathuraka%202025/south-star-gutters/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport Navbar from './components/Navbar';\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n                <Navbar />\n        {children}\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;;8BAE5D,8OAAC,4HAAA,CAAA,UAAM;;;;;gBACd;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 448, "column": 0}, "map": {"version":3,"sources":["file:///D:/chathuraka%202025/south-star-gutters/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}